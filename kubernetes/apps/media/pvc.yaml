---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: smb-media
provisioner: smb.csi.k8s.io
parameters:
  # On Windows, "*.default.svc.cluster.local" could not be recognized by csi-proxy
  source: //smb.${SECRET_DOMAIN}/services
  subDir: ${pvc.metadata.namespace}-${pvc.metadata.name}
  # if csi.storage.k8s.io/provisioner-secret is provided, will create a sub directory
  # with PV name under source
  csi.storage.k8s.io/provisioner-secret-name: "smb-secret"
  csi.storage.k8s.io/provisioner-secret-namespace: kube-system
  csi.storage.k8s.io/node-stage-secret-name: "smb-secret"
  csi.storage.k8s.io/node-stage-secret-namespace: kube-system
volumeBindingMode: Immediate
mountOptions:
  - dir_mode=0777
  - file_mode=0777
  - uid=1001
  - gid=1001
  - noperm
  - mfsymlinks
  - cache=strict
  - noserverino  # required to prevent data corruption
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-smb-media
  namespace: media
spec:
  storageClassName: "smb-media"
  capacity:
    storage: 1Mi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
    - dir_mode=0777
    - file_mode=0777
    - vers=3.0
  csi:
    driver: smb.csi.k8s.io
    readOnly: false
    volumeHandle: smb-vol-media  # make sure it's a unique id in the cluster
    volumeAttributes:
      source: //smb.${SECRET_DOMAIN}/services
      subDir: media
    nodeStageSecretRef:
      name: smb-secret
      namespace: kube-system
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-smb-media
  namespace: media
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Mi
  volumeName: pv-smb-media
  storageClassName: "smb-media"
